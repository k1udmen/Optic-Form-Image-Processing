#include <opencv2/opencv.hpp>

int main() {
    // Open a connection to the default camera 
    cv::VideoCapture cap(0);


    // Check if the camera opened successfully
    if (!cap.isOpened()) {
        std::cerr << "Error: Could not open camera." << std::endl;
        return -1;
    }

    // Create a window to display the webcam feed
    cv::namedWindow("Webcam Feed", cv::WINDOW_NORMAL);

    while (true) {
        // Read a frame from the webcam
        cv::Mat frame;
        cap >> frame;

        // Check if the frame is empty
        if (frame.empty()) {
            std::cerr << "Error: Could not read frame from camera." << std::endl;
            break;
        }

        // Convert the frame to grayscale
        cv::Mat grayscale;
        cv::cvtColor(frame, grayscale, cv::COLOR_BGR2GRAY);

        // Apply edge detection using Canny
        cv::Mat edges;
        cv::Canny(grayscale, edges, 50, 150);

        // Display the original frame and the edges
        cv::imshow("Webcam Feed", frame);
        cv::imshow("Edges", edges);

        // Break the loop if the user presses the 'Esc' key
        if (cv::waitKey(1) == 27) {
            break;
        }
    }

    // Release the camera and close all windows
    cap.release();
    cv::destroyAllWindows();

    return 0;
}
